height <-rbind(oldOrmTime, newOrmTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),rgb(235,181,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
height <-rbind(oldOrmTime, newOrmTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),rgb(235,181,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),rgb(235,181,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 + (2096*0.5),
2147 + (2147*0.5),
2206 + (2206*0.5),
2243 + (2243*0.5),
2181 + (2181*0.5))
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab = ylab)
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab = ylab)
axis(2, at=seq(0,1000,by=100), labels = paste(seq(0,1000,by=100) ylab="Time in milliseconds")
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab = ylab)
axis(2, at=seq(0,1000,by=100), labels = paste(seq(0,1000,by=100), ylab="Time in milliseconds")
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"))
axis(2, at=seq(0,1000,by=100), labels = paste(seq(0,1000,by=100), ylab="Time in milliseconds")
axis(2, at=seq(0,1000,by=100), labels = paste(seq(0,1000,by=100), ylab="Time in milliseconds")
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test",
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"))
axis(2, at=seq(0,1000,by=100), labels = paste(seq(0,1000,by=100)), ylab="Time in milliseconds")
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 15000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab="Time in milliseconds")
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 15000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 15000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical improved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 15000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 20000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
windowsFonts(cmuserif = windowsFont("CMU Serif"))
par(family = "cmuserif", font = 1, font.lab = 1, font.axis = 1)
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = "Test", ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM and SQL\nwhen running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM\n and SQL when running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM\n and SQL when running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM\n and SQL when running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of Current ORM, Hypothetical Improved ORM\n and SQL when running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
main <- "Performance comparison of current ORM, hypothetical improved ORM\n and SQL when running 'GetAllSteadyStatesDataRaw' query"
xLabels <- c("Run 1", "Run 2", "Run 3", "Run 4", "Run 5", "Avg.")
oldOrmTime <- c(9260, 7590, 14750, 7990, 7400)
oldOrmTime <- c(ormTime, mean(ormTime))
newOrmTime <- c(2096 * 1.5,
2147 * 1.5,
2206 * 1.5,
2243 * 1.5,
2181 * 1.5)
newOrmTime <- c(newOrmTime, mean(newOrmTime))
sqlTime <- c(2096, 2147, 2206, 2243, 2181)
sqlTime <- c(sqlTime, mean(sqlTime))
height <-rbind(oldOrmTime, newOrmTime, sqlTime)
barplot(height, beside = T, main = main, ylim = c (0, 16000),
names.arg = xLabels, col=c(rgb(3,169,244, maxColorValue = 255),
rgb(235,181,37, maxColorValue = 255),
rgb(237,28,37, maxColorValue = 255)),
legend = c("Old ORM", "Hypothetical\nimproved ORM", "SQL"), ylab="Time in milliseconds")
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R', echo=TRUE)
library(plotrix)
# setting wd
setwd("C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output")
# Creating all models - visualisation
plot_result_per_db("1542700697_scaled_simple_drivers_tests.csv",
"creating_all_unscaled_visualization.png",
"Time spent creating all models per database",
"Amount of created models", "Time (ms)", 8000,
"AmountOfModelsInserted", "TimeSpentInsertingModels")
# Getting models by pk - visualisation
plot_result_per_db("1542700697_scaled_simple_drivers_tests.csv",
"getting_by_pk_visualization.png",
"Time spent retrieving models (by primary key) per database",
"Amount of retrieved models", "Time (ms)", 5000,
"AmountOfModelsRetrievedByPrimaryKey", "TimeSpentRetrievingModelsByPrimaryKey")
# Getting all models
plot_result_per_db("1542700697_scaled_simple_drivers_tests.csv",
"getting_all_unscaled_visualization.png",
"Time spent retrieving all models per database",
"Amount of retrieved models", "Time (ms)", 2500,
"AmountOfModelsRetrievedByPrimaryKey", "TimeSpentRetrievingAllModels")
# Deleting all models - visualisation
plot_result_per_db("1542700697_scaled_simple_drivers_tests.csv",
"deleting_all_unscaled_visualization.png",
"Time spent deleting all models per database",
"Amount of deleted models", "Time (ms)", 5000,
"AmountOfModelsRetrievedByPrimaryKey", "TimeSpentDeletingAllModels")
# Updating all models - visualisation
plot_result_per_db("1542700697_scaled_simple_drivers_tests.csv",
"updating_all_unscaled_visualization.png",
"Time spent updating all models per database",
"Amount of updated models", "Time (ms)", 5000,
"AmountOfModelsUpdated", "TimeSpentUpdatingModels")
# Function for transparent colors
t_col <- function(color, percent = 50, name = NULL) {
#	  color = color name
#	percent = % transparency
rgb.val <- col2rgb(color)
return(rgb(rgb.val[1], rgb.val[2], rgb.val[3],
max = 255,
alpha = (100-percent)*255/100,
names = name))
}
plot_result_per_db <- function(filename, outfilename, visualizationtitle,
xaxisName, yAxisName, yAxisMax,
csvColumnToPlotOnXAxis, csvColumnToPlotOnYAxis)
{
# Creating png with 'cairo' driver so that anti-aliasing is used
png(outfilename, 800, 800, type='cairo')
#this.dir <- dirname(parent.frame(2)$ofile)
#setwd(this.dir)
# making lines thicker
par(lwd=2,cex=1)
# Parse CSV to DF
TestReport <- data.frame(read.csv(file=filename, header=TRUE, sep=","))
# Using the csvColumnToPlotOnYAxis factor directly as X produces bars,
# so we only use them as labels.
csvColumnOnXAxisLabels <- unique(TestReport[,csvColumnToPlotOnXAxis])
csvColumnOnXAxisLength <- length(unique(TestReport[,csvColumnToPlotOnXAxis]))
amountOfDbs <- length(unique(TestReport$DatabaseTypeUsedStr))
# Preparing colors TODO: NEEDS TO BE DYNAMIC LADS
colors = c(t_col("black", perc = 15, name = "lt.black"), t_col("blue", perc = 15, name = "lt.blue"),
t_col("red", perc = 15, name = "lt.red"), t_col("green", perc = 15, name = "lt.green"),
t_col("pink", perc = 15, name = "lt.pink"), t_col("orange", perc = 15, name = "lt.orange"),
t_col("yellow", perc = 15, name = "lt.yellow"), t_col("grey", perc = 15, name = "lt.grey"))
# Looping through the unique DB types, getting the value for them and
# plotting + adding legend.
counter = 1
for (dbType in unique(TestReport$DatabaseTypeUsedStr)) {
measurementsForThisDb <- subset(TestReport, DatabaseTypeUsedStr==dbType, select=c(csvColumnToPlotOnYAxis))[, csvColumnToPlotOnYAxis]
if(counter == 1)
{
plot(seq(1:csvColumnOnXAxisLength), measurementsForThisDb,
ylim=c(0, yAxisMax), pch=19, xaxt="n", yaxt="n",
col=colors[counter], type="o", cex.axis=1.25, cex.lab=1.5,
xlab = xaxisName, ylab = yAxisName)
# Setting custom title and axis values
title(visualizationtitle,cex.main=1.7)
axis(1, at=1:csvColumnOnXAxisLength, labels=csvColumnOnXAxisLabels,
cex.lab=1.5, cex.axis=1.25)
axis(2, at = seq(0, yAxisMax, by = 500),
cex.lab=1.5, cex.axis=1.25)
}
else
{
lines(seq(1:csvColumnOnXAxisLength), measurementsForThisDb,
ylim=c(0, 45000), type = "o", pch=19,
col=colors[counter])
}
counter <- counter + 1
}
legend(1, yAxisMax - (yAxisMax / 10),
legend=unique(TestReport$DatabaseTypeUsedStr),
col=colors, lty=c(1), cex=1.5, pch=19)
# shutting down png drawing driver
dev.off()
}
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R', echo=TRUE)
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R')
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R', echo=TRUE)
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R')
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R', echo=TRUE)
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R')
source('C:/Projects/Afstudeerexperimenten/Benchmarking Console App/Benchmarking Console App/Output/visualize_test_report.R')
